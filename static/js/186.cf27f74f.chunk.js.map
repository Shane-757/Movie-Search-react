{"version":3,"file":"static/js/186.cf27f74f.chunk.js","mappings":"mMA2CA,UAvCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,6GAEaC,EAAAA,EAAAA,IAAA,6CAAgDP,EAAhD,YAAmE,CAC/FQ,OAAQ,CACNC,QAAS,sCAJI,OAEXC,EAFW,OAOjBN,EAAWM,EAAgBC,KAAKC,SAPf,gDASjBC,QAAQC,MAAM,0BAAd,MATiB,yDAAH,qDAalBR,GACD,GAAE,CAACN,KAGF,4BACE,eAAIe,UAAU,kBAAd,qBACCZ,EAAQa,OAAS,EAChBb,EAAQc,KAAI,SAACC,GAAD,OACV,4BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFHF,EAAOG,GADP,KAOV,cAAGC,MAAO,CACRC,UAAW,SAAUC,WAAY,OAAQC,SAAU,QADrD,oCAKT,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const reviewsResponse = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews`, {\n          params: {\n            api_key: '64ac679b39866e67efda72c4a9b2c64c'\n          }\n        });\n        setReviews(reviewsResponse.data.results);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2 className=\"centeredContent\">Reviews</h2>\n      {reviews.length > 0 ? (\n        reviews.map((review) => (\n          <div key={review.id}>\n            <p>{review.author}</p>\n            <p>{review.content}</p>\n          </div>\n        ))\n      ) : (\n          <p style={{\n            textAlign: 'center', fontWeight: 'bold', fontSize: '30px'}}>No reviews available</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","axios","params","api_key","reviewsResponse","data","results","console","error","className","length","map","review","author","content","id","style","textAlign","fontWeight","fontSize"],"sourceRoot":""}