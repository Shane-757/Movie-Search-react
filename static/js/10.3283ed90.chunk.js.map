{"version":3,"file":"static/js/10.3283ed90.chunk.js","mappings":"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","sources":["Pages/MovieDetails/MovieDetails.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, Link } from 'react-router-dom';\nimport Cast from 'components/Cast/Cast';\nimport Reviews from 'components/Reviews/Reviews'\n\nconst COMPONENT_NAMES = {\n  CAST: 'cast',\n  REVIEWS: 'reviews',\n};\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [showComponent, setShowComponent] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const detailsResponse = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}`, {\n          params: {\n            api_key: '64ac679b39866e67efda72c4a9b2c64c'\n          }\n        });\n        setMovieDetails(detailsResponse.data);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  const handleClick = (component) => {\n    setShowComponent(component);\n  };\n\n  return (\n    <div>\n      <h2>Movie Details</h2>\n      {movieDetails ? (\n        <div className=\"movie-details-container\">\n          <img className=\"movie-poster\" src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`} alt={movieDetails.title} />\n            <div className=\"movie-details\">\n              <h3>{movieDetails.title}</h3>\n              <p>User Score: {movieDetails.vote_average}</p>\n              <p>Overview: {movieDetails.overview}</p>\n              <p>Genres: {movieDetails.genres.map((genre) => genre.name).join(', ')}</p>\n            </div>\n        </div>\n      ) : (\n        <p>Loading movie details...</p>\n      )}\n      <div>\n         <div className=\"centeredContent\">\n        <h2>Additional Information</h2>\n        <ul className=\"infoButton\">\n          <li><Link onClick={() => handleClick(COMPONENT_NAMES.CAST)} to=\"#\">Cast</Link></li>\n          <li><Link onClick={() => handleClick(COMPONENT_NAMES.REVIEWS)} to=\"#\">Reviews</Link></li>\n          </ul>\n          </div>\n        {showComponent === COMPONENT_NAMES.CAST && <Cast />}\n        {showComponent === COMPONENT_NAMES.REVIEWS && <Reviews />}\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, Link } from 'react-router-dom';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const castResponse = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/credits`, {\n          params: {\n            api_key: '64ac679b39866e67efda72c4a9b2c64c'\n          }\n        });\n        setCast(castResponse.data.cast);\n      } catch (error) {\n        console.error('Error fetching cast:', error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div className=\"Cast\">\n      <h2 className=\"centeredContent\">Cast</h2>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map((actor) => (\n            <li key={actor.id}>\n              <img \n                src={actor.profile_path \n                      ? `https://image.tmdb.org/t/p/w200${actor.profile_path}` \n                      : 'https://books.tsl.org.au/wp-content/uploads/sites/3/2015/01/NO-Image-placeholder.png'} \n                alt={actor.name} \n              />\n              <Link to={`/actor/${actor.id}`}>{actor.name}</Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>Loading cast...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const reviewsResponse = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews`, {\n          params: {\n            api_key: '64ac679b39866e67efda72c4a9b2c64c'\n          }\n        });\n        setReviews(reviewsResponse.data.results);\n      } catch (error) {\n        console.error('Error fetching reviews:', error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2 className=\"centeredContent\">Reviews</h2>\n      {reviews.length > 0 ? (\n        reviews.map((review) => (\n          <div key={review.id}>\n            <p>{review.author}</p>\n            <p>{review.content}</p>\n          </div>\n        ))\n      ) : (\n          <p style={{\n            textAlign: 'center', fontWeight: 'bold', fontSize: '30px'}}>No reviews available</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;"],"names":["COMPONENT_NAMES","movieId","useParams","useState","movieDetails","setMovieDetails","showComponent","setShowComponent","useEffect","fetchMovieDetails","axios","params","api_key","detailsResponse","data","console","error","handleClick","component","className","src","poster_path","alt","title","vote_average","overview","genres","map","genre","name","join","onClick","to","cast","setCast","fetchCast","castResponse","length","actor","profile_path","id","reviews","setReviews","fetchReviews","reviewsResponse","results","review","author","content","style","textAlign","fontWeight","fontSize"],"sourceRoot":""}